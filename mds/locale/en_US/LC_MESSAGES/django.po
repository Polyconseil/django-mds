# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-10-10 11:03+0200\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: en_US\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: access_control/authenticate.py:63
msgid "Signature has expired."
msgstr ""

#: access_control/authenticate.py:66
msgid "Error decoding signature."
msgstr ""

#: access_control/authenticate.py:73
msgid "Expired or revoked token"
msgstr ""

#: access_control/authenticate.py:98
#, python-format
msgid "Invalid payload, missing fields: %(fields)s"
msgstr ""

#: admin.py:87
msgid "published"
msgstr ""

#: admin.py:91
msgid "No"
msgstr ""

#: admin.py:91
msgid "Yes"
msgstr ""

#: apis/utils.py:23
msgctxt "API Error"
msgid "Already registered"
msgstr ""

#: enums.py:15
msgctxt "Device status"
msgid "Available"
msgstr ""

#: enums.py:16
msgctxt "Device status"
msgid "Reserved"
msgstr ""

#: enums.py:17
msgctxt "Device status"
msgid "Unavailable"
msgstr ""

#: enums.py:18
msgctxt "Device status"
msgid "Removed"
msgstr ""

#: enums.py:19
msgctxt "Device status"
msgid "Trip"
msgstr ""

#: enums.py:20
msgctxt "Device status"
msgid "Elsewhere"
msgstr ""

#: enums.py:21
msgctxt "Device status"
msgid "Inactive"
msgstr ""

#: enums.py:22
msgctxt "Device status"
msgid "Unknown"
msgstr ""

#: enums.py:29
msgctxt "Device category"
msgid "Bicycle"
msgstr ""

#: enums.py:30
msgctxt "Device category"
msgid "Scooter"
msgstr ""

#: enums.py:31
msgctxt "Device category"
msgid "Car"
msgstr ""

#: enums.py:37
msgctxt "Device propulsion"
msgid "Human"
msgstr ""

#: enums.py:38
msgctxt "Device propulsion"
msgid "Electric Assist"
msgstr ""

#: enums.py:39
msgctxt "Device propulsion"
msgid "Electric"
msgstr ""

#: enums.py:40
msgctxt "Device propulsion"
msgid "Combustion"
msgstr ""

#: enums.py:49
msgctxt "Event type"
msgid "Register"
msgstr ""

#: enums.py:50 enums.py:91
msgctxt "Event type"
msgid "Service start"
msgstr ""

#: enums.py:51 enums.py:102
msgctxt "Event type"
msgid "Service end"
msgstr ""

#: enums.py:52
msgctxt "Event type"
msgid "Provider drop off"
msgstr ""

#: enums.py:53
msgctxt "Event type"
msgid "Provider pick up"
msgstr ""

#: enums.py:54
msgctxt "Event type"
msgid "City pick up"
msgstr ""

#: enums.py:55
msgctxt "Event type"
msgid "Reserve"
msgstr ""

#: enums.py:56
msgctxt "Event type"
msgid "Cancel reservation"
msgstr ""

#: enums.py:57
msgctxt "Event type"
msgid "Trip start"
msgstr ""

#: enums.py:58
msgctxt "Event type"
msgid "Trip enter"
msgstr ""

#: enums.py:59
msgctxt "Event type"
msgid "Trip leave"
msgstr ""

#: enums.py:60
msgctxt "Event type"
msgid "Trip end"
msgstr ""

#: enums.py:61
msgctxt "Event type"
msgid "Deregister"
msgstr ""

#: enums.py:63 enums.py:107
msgctxt "Event type"
msgid "Received telemetry"
msgstr ""

#: enums.py:65 enums.py:109
msgctxt "Event type"
msgid "Battery charged"
msgstr ""

#: enums.py:75 enums.py:93
msgctxt "Event type"
msgid "Rebalance drop off"
msgstr ""

#: enums.py:76 enums.py:94
msgctxt "Event type"
msgid "Maintenance drop off"
msgstr ""

#: enums.py:77 enums.py:100
msgctxt "Event type"
msgid "Low battery"
msgstr ""

#: enums.py:78 enums.py:99
msgctxt "Event type"
msgid "Maintenance"
msgstr ""

#: enums.py:79 enums.py:103
msgctxt "Event type"
msgid "Rebalance pick up"
msgstr ""

#: enums.py:80 enums.py:104
msgctxt "Event type"
msgid "Maintenance pick up"
msgstr ""

#: enums.py:92
msgctxt "Event type"
msgid "User drop off"
msgstr ""

#: enums.py:95
msgctxt "Event type"
msgid "Agency drop off"
msgstr ""

#: enums.py:97
msgctxt "Event type"
msgid "User pick up"
msgstr ""

#: enums.py:105
msgctxt "Event type"
msgid "Agency pick up"
msgstr ""

#: enums.py:117
msgctxt "Event type reason"
msgid "Low battery"
msgstr ""

#: enums.py:118
msgctxt "Event type reason"
msgid "Maintenance"
msgstr ""

#: enums.py:119
msgctxt "Event type reason"
msgid "Compliance"
msgstr ""

#: enums.py:120
msgctxt "Event type reason"
msgid "Off hours"
msgstr ""

#: enums.py:121
msgctxt "Event type reason"
msgid "Rebalance"
msgstr ""

#: enums.py:122
msgctxt "Event type reason"
msgid "Charge"
msgstr ""

#: enums.py:123
msgctxt "Event type reason"
msgid "Missing"
msgstr ""

#: enums.py:124
msgctxt "Event type reason"
msgid "Decommissioned"
msgstr ""

#: enums.py:131
msgctxt "Event source"
msgid "Agency API"
msgstr ""

#: enums.py:132
msgctxt "Event source"
msgid "Provider API"
msgstr ""

#: enums.py:139
msgctxt "Area type"
msgid "Unrestricted"
msgstr ""

#: enums.py:140
msgctxt "Area type"
msgid "Restricted"
msgstr ""

#: enums.py:141
msgctxt "Area type"
msgid "Preferred pick up"
msgstr ""

#: enums.py:142
msgctxt "Area type"
msgid "Preferred drop off"
msgstr ""

#: enums.py:175
msgctxt "Policy type"
msgid "Fleet size"
msgstr ""

#: enums.py:180
msgctxt "Policy type"
msgid ""
"Individual limitations on time spent in one or more vehicle-states. Rule max/"
"min refers to number of minutes."
msgstr ""

#: enums.py:188
msgctxt "Policy type"
msgid "Global or local speed limits. Rule max/min refers to miles per hour."
msgstr ""

#: enums.py:196
msgctxt "Policy type"
msgid ""
"Information for users, e.g. about helmet laws. Generally can't be enforced "
"via events and telemetry."
msgstr ""
